<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>damas-project</artifactId>
        <groupId>solutions.digamma</groupId>
        <version>${damas.verson}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>damas.standalone</artifactId>

    <properties>
        <jersey.version>2.27</jersey.version>
        <weld.version>3.0.5.Final</weld.version>
        <lib.dir>libs/</lib.dir>
        <lib.path>${project.build.directory}/${lib.dir}</lib.path>
        <entry.class>solutions.digamma.damas.cdi.providers.WeldProvider</entry.class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${weld.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>solutions.digamma</groupId>
            <artifactId>damas.utils</artifactId>
        </dependency>

        <!-- Runtime dependencies -->
        <dependency>
            <groupId>solutions.digamma</groupId>
            <artifactId>damas.rs</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>solutions.digamma</groupId>
            <artifactId>damas.jcr</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>solutions.digamma</groupId>
            <artifactId>damas.jcr.provider</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Allow injection into Jersey's resources -->
        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-weld2-se</artifactId>
            <version>${jersey.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Allow JSON serialization with JSONB -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <version>${jersey.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${entry.class}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>